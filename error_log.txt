Configuring and building Thirdparty/DBoW2 ...
mkdir: cannot create directory ‘build’: File exists
-- Configuring done
-- Generating done
-- Build files have been written to: /home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/DBoW2/build
[100%] Built target DBoW2
Configuring and building Thirdparty/g2o ...
mkdir: cannot create directory ‘build’: File exists
-- BUILD TYPE:Release
-- Compiling on Unix
CMake Warning (dev) at /usr/share/cmake-3.10/Modules/FindOpenMP.cmake:310 (if):
  if given arguments:

    "TRUE"

  An argument named "TRUE" appears in a conditional statement.  Policy
  CMP0012 is not set: if() recognizes numbers and boolean constants.  Run
  "cmake --help-policy CMP0012" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.
Call Stack (most recent call first):
  /usr/share/cmake-3.10/Modules/FindOpenMP.cmake:425 (_OPENMP_GET_SPEC_DATE)
  CMakeLists.txt:47 (FIND_PACKAGE)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at /usr/share/cmake-3.10/Modules/FindOpenMP.cmake:310 (if):
  if given arguments:

    "TRUE"

  An argument named "TRUE" appears in a conditional statement.  Policy
  CMP0012 is not set: if() recognizes numbers and boolean constants.  Run
  "cmake --help-policy CMP0012" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.
Call Stack (most recent call first):
  /usr/share/cmake-3.10/Modules/FindOpenMP.cmake:425 (_OPENMP_GET_SPEC_DATE)
  CMakeLists.txt:47 (FIND_PACKAGE)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Configuring done
-- Generating done
-- Build files have been written to: /home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/build
[100%] Built target g2o
Uncompress vocabulary ...
Configuring and building ORB_SLAM3 ...
mkdir: cannot create directory ‘build’: File exists
Build type: Release
-- Using flag -std=c++11.
CMake Warning at CMakeLists.txt:36 (find_package):
  Could not find a configuration file for package "OpenCV" that is compatible
  with requested version "4.0".

  The following configuration files were considered but not accepted:

    /usr/share/OpenCV/OpenCVConfig.cmake, version: 3.2.0



OPENCV VERSION:
3.2.0
CMake Warning at CMakeLists.txt:49 (find_package):
  By not providing "Findrealsense2.cmake" in CMAKE_MODULE_PATH this project
  has asked CMake to find a package configuration file provided by
  "realsense2", but CMake did not find one.

  Could not find a package configuration file provided by "realsense2" with
  any of the following names:

    realsense2Config.cmake
    realsense2-config.cmake

  Add the installation prefix of "realsense2" to CMAKE_PREFIX_PATH or set
  "realsense2_DIR" to a directory containing one of the above files.  If
  "realsense2" provides a separate development package or SDK, be sure it has
  been installed.


-- BUILD TYPE:Release
-- Compiling on Unix
CMake Warning (dev) at /usr/share/cmake-3.10/Modules/FindOpenMP.cmake:310 (if):
  if given arguments:

    "TRUE"

  An argument named "TRUE" appears in a conditional statement.  Policy
  CMP0012 is not set: if() recognizes numbers and boolean constants.  Run
  "cmake --help-policy CMP0012" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.
Call Stack (most recent call first):
  /usr/share/cmake-3.10/Modules/FindOpenMP.cmake:425 (_OPENMP_GET_SPEC_DATE)
  Thirdparty/g2o/CMakeLists.txt:47 (FIND_PACKAGE)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at /usr/share/cmake-3.10/Modules/FindOpenMP.cmake:310 (if):
  if given arguments:

    "TRUE"

  An argument named "TRUE" appears in a conditional statement.  Policy
  CMP0012 is not set: if() recognizes numbers and boolean constants.  Run
  "cmake --help-policy CMP0012" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.
Call Stack (most recent call first):
  /usr/share/cmake-3.10/Modules/FindOpenMP.cmake:425 (_OPENMP_GET_SPEC_DATE)
  Thirdparty/g2o/CMakeLists.txt:47 (FIND_PACKAGE)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Configuring done
-- Generating done
-- Build files have been written to: /home/kanishk/ros_ws/ORB_SLAM3/build
[  1%] Building CXX object CMakeFiles/ORB_SLAM3.dir/src/LocalMapping.cc.o
In file included from /usr/local/include/eigen3/Eigen/Core:326:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h: In member function ‘void Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::operator()(Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::ResScalar*, Index, const LhsScalar*, const RhsScalar*, Index, Index, Index, Eigen::internal::gebp_kernel<LhsScalar, RhsScalar, Index, mr, nr, ConjugateLhs, ConjugateRhs>::ResScalar, Index, Index, Index, Index, RhsScalar*)’:
/usr/local/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:574:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if(nr==4) traits.initAcc(C3);
         ^~
/usr/local/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:575:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
                   traits.initAcc(C4);
                   ^~~~~~
/usr/local/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:946:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if(nr==4) R3 = ploadu<ResPacket>(r3);
         ^~
/usr/local/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:948:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
                   traits.acc(C0, alphav, R0);
                   ^~~~~~
/usr/local/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:951:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if(nr==4) traits.acc(C3, alphav, R3);
         ^~
/usr/local/include/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:953:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
                   pstoreu(r0, R0);
                   ^~~~~~~
In file included from /home/kanishk/ros_ws/ORB_SLAM3/include/Atlas.h:27:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/home/kanishk/ros_ws/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h: In constructor ‘ORB_SLAM3::KannalaBrandt8::KannalaBrandt8(std::vector<float>)’:
/home/kanishk/ros_ws/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:102:21: warning: ‘ORB_SLAM3::KannalaBrandt8::precision’ will be initialized after [-Wreorder]
         const float precision;
                     ^~~~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:92:26: warning:   ‘std::vector<int> ORB_SLAM3::KannalaBrandt8::mvLappingArea’ [-Wreorder]
         std::vector<int> mvLappingArea;
                          ^~~~~~~~~~~~~
In file included from /home/kanishk/ros_ws/ORB_SLAM3/include/Atlas.h:27:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/home/kanishk/ros_ws/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:44:9: warning:   when initialized here [-Wreorder]
         KannalaBrandt8(const std::vector<float> _vParameters) : GeometricCamera(_vParameters), precision(1e-6), mvLappingArea(2,0) ,tvr(nullptr) {
         ^~~~~~~~~~~~~~
In file included from /home/kanishk/ros_ws/ORB_SLAM3/include/Atlas.h:27:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/home/kanishk/ros_ws/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h: In constructor ‘ORB_SLAM3::KannalaBrandt8::KannalaBrandt8(std::vector<float>, float)’:
/home/kanishk/ros_ws/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:102:21: warning: ‘ORB_SLAM3::KannalaBrandt8::precision’ will be initialized after [-Wreorder]
         const float precision;
                     ^~~~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:92:26: warning:   ‘std::vector<int> ORB_SLAM3::KannalaBrandt8::mvLappingArea’ [-Wreorder]
         std::vector<int> mvLappingArea;
                          ^~~~~~~~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:50:9: warning:   when initialized here [-Wreorder]
         KannalaBrandt8(const std::vector<float> _vParameters, const float _precision) : GeometricCamera(_vParameters),
         ^~~~~~~~~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h: In constructor ‘ORB_SLAM3::KannalaBrandt8::KannalaBrandt8(ORB_SLAM3::KannalaBrandt8*)’:
/home/kanishk/ros_ws/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:102:21: warning: ‘ORB_SLAM3::KannalaBrandt8::precision’ will be initialized after [-Wreorder]
         const float precision;
                     ^~~~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:92:26: warning:   ‘std::vector<int> ORB_SLAM3::KannalaBrandt8::mvLappingArea’ [-Wreorder]
         std::vector<int> mvLappingArea;
                          ^~~~~~~~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/include/CameraModels/KannalaBrandt8.h:56:9: warning:   when initialized here [-Wreorder]
         KannalaBrandt8(KannalaBrandt8* pKannala) : GeometricCamera(pKannala->mvParameters), precision(pKannala->precision), mvLappingArea(2,0) ,tvr(nullptr) {
         ^~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/SparseLU:29:0,
                 from /usr/local/include/eigen3/Eigen/Sparse:22,
                 from /home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h:30,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Optimizer.h:36,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:24:
/usr/local/include/eigen3/Eigen/src/SparseLU/SparseLU_gemm_kernel.h: In function ‘void Eigen::internal::sparselu_gemm(Index, Index, Index, const Scalar*, Index, const Scalar*, Index, Scalar*, Index)’:
/usr/local/include/eigen3/Eigen/src/SparseLU/SparseLU_gemm_kernel.h:78:9: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if(RK==4) b30 = pset1<Packet>(Bc0[3]);
         ^~
/usr/local/include/eigen3/Eigen/src/SparseLU/SparseLU_gemm_kernel.h:79:19: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
                   b01 = pset1<Packet>(Bc1[0]);
                   ^~~
In file included from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:0:
/home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h: In constructor ‘ORB_SLAM3::LocalMapping::LocalMapping(ORB_SLAM3::System*, ORB_SLAM3::Atlas*, float, bool, const string&)’:
/home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:185:10: warning: ‘ORB_SLAM3::LocalMapping::bInitializing’ will be initialized after [-Wreorder]
     bool bInitializing;
          ^~~~~~~~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:172:10: warning:   ‘bool ORB_SLAM3::LocalMapping::mbAbortBA’ [-Wreorder]
     bool mbAbortBA;
          ^~~~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:34:1: warning:   when initialized here [-Wreorder]
 LocalMapping::LocalMapping(System* pSys, Atlas *pAtlas, const float bMonocular, bool bInertial, const string &_strSeqName):
 ^~~~~~~~~~~~
In file included from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:0:
/home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:179:10: warning: ‘ORB_SLAM3::LocalMapping::mbAcceptKeyFrames’ will be initialized after [-Wreorder]
     bool mbAcceptKeyFrames;
          ^~~~~~~~~~~~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:91:10: warning:   ‘bool ORB_SLAM3::LocalMapping::mbNewInit’ [-Wreorder]
     bool mbNewInit;
          ^~~~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:34:1: warning:   when initialized here [-Wreorder]
 LocalMapping::LocalMapping(System* pSys, Atlas *pAtlas, const float bMonocular, bool bInertial, const string &_strSeqName):
 ^~~~~~~~~~~~
In file included from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:0:
/home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:93:18: warning: ‘ORB_SLAM3::LocalMapping::mIdxInit’ will be initialized after [-Wreorder]
     unsigned int mIdxInit;
                  ^~~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:88:12: warning:   ‘double ORB_SLAM3::LocalMapping::mScale’ [-Wreorder]
     double mScale;
            ^~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:34:1: warning:   when initialized here [-Wreorder]
 LocalMapping::LocalMapping(System* pSys, Atlas *pAtlas, const float bMonocular, bool bInertial, const string &_strSeqName):
 ^~~~~~~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc: In member function ‘void ORB_SLAM3::LocalMapping::Run()’:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:120:18: warning: variable ‘b_doneLBA’ set but not used [-Wunused-but-set-variable]
             bool b_doneLBA = false;
                  ^~~~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc: In member function ‘void ORB_SLAM3::LocalMapping::CreateNewMapPoints()’:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:407:33: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
         while((vpNeighKFs.size()<=nn)&&(pKF->mPrevKF)&&(count++<nn))
                ~~~~~~~~~~~~~~~~~^~~~
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:49: error: no match for ‘operator/’ (operand types are ‘cv::Matx<float, 3, 1>’ and ‘float’)
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
In file included from /usr/include/opencv2/core/cvstd.inl.hpp:48:0,
                 from /usr/include/opencv2/core.hpp:3215,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/c++/7/complex:416:5: note: candidate: template<class _Tp> std::complex<_Tp> std::operator/(const std::complex<_Tp>&, const std::complex<_Tp>&)
     operator/(const complex<_Tp>& __x, const complex<_Tp>& __y)
     ^~~~~~~~
/usr/include/c++/7/complex:416:5: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const std::complex<_Tp>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core/cvstd.inl.hpp:48:0,
                 from /usr/include/opencv2/core.hpp:3215,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/c++/7/complex:425:5: note: candidate: template<class _Tp> std::complex<_Tp> std::operator/(const std::complex<_Tp>&, const _Tp&)
     operator/(const complex<_Tp>& __x, const _Tp& __y)
     ^~~~~~~~
/usr/include/c++/7/complex:425:5: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const std::complex<_Tp>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core/cvstd.inl.hpp:48:0,
                 from /usr/include/opencv2/core.hpp:3215,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/c++/7/complex:434:5: note: candidate: template<class _Tp> std::complex<_Tp> std::operator/(const _Tp&, const std::complex<_Tp>&)
     operator/(const _Tp& __x, const complex<_Tp>& __y)
     ^~~~~~~~
/usr/include/c++/7/complex:434:5: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   mismatched types ‘const std::complex<_Tp>’ and ‘float’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:59:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/mat.hpp:3448:20: note: candidate: cv::MatExpr cv::operator/(const cv::MatExpr&, const cv::MatExpr&)
 CV_EXPORTS MatExpr operator / (const MatExpr& e1, const MatExpr& e2);
                    ^~~~~~~~
/usr/include/opencv2/core/mat.hpp:3448:20: note:   no known conversion for argument 1 from ‘cv::Matx<float, 3, 1>’ to ‘const cv::MatExpr&’
/usr/include/opencv2/core/mat.hpp:3447:20: note: candidate: cv::MatExpr cv::operator/(double, const cv::MatExpr&)
 CV_EXPORTS MatExpr operator / (double s, const MatExpr& e);
                    ^~~~~~~~
/usr/include/opencv2/core/mat.hpp:3447:20: note:   no known conversion for argument 1 from ‘cv::Matx<float, 3, 1>’ to ‘double’
/usr/include/opencv2/core/mat.hpp:3446:20: note: candidate: cv::MatExpr cv::operator/(const cv::MatExpr&, double)
 CV_EXPORTS MatExpr operator / (const MatExpr& e, double s);
                    ^~~~~~~~
/usr/include/opencv2/core/mat.hpp:3446:20: note:   no known conversion for argument 1 from ‘cv::Matx<float, 3, 1>’ to ‘const cv::MatExpr&’
/usr/include/opencv2/core/mat.hpp:3445:20: note: candidate: cv::MatExpr cv::operator/(const cv::Mat&, const cv::MatExpr&)
 CV_EXPORTS MatExpr operator / (const Mat& m, const MatExpr& e);
                    ^~~~~~~~
/usr/include/opencv2/core/mat.hpp:3445:20: note:   no known conversion for argument 1 from ‘cv::Matx<float, 3, 1>’ to ‘const cv::Mat&’
/usr/include/opencv2/core/mat.hpp:3444:20: note: candidate: cv::MatExpr cv::operator/(const cv::MatExpr&, const cv::Mat&)
 CV_EXPORTS MatExpr operator / (const MatExpr& e, const Mat& m);
                    ^~~~~~~~
/usr/include/opencv2/core/mat.hpp:3444:20: note:   no known conversion for argument 1 from ‘cv::Matx<float, 3, 1>’ to ‘const cv::MatExpr&’
/usr/include/opencv2/core/mat.hpp:3443:20: note: candidate: cv::MatExpr cv::operator/(double, const cv::Mat&)
 CV_EXPORTS MatExpr operator / (double s, const Mat& a);
                    ^~~~~~~~
/usr/include/opencv2/core/mat.hpp:3443:20: note:   no known conversion for argument 1 from ‘cv::Matx<float, 3, 1>’ to ‘double’
/usr/include/opencv2/core/mat.hpp:3442:20: note: candidate: cv::MatExpr cv::operator/(const cv::Mat&, double)
 CV_EXPORTS MatExpr operator / (const Mat& a, double s);
                    ^~~~~~~~
/usr/include/opencv2/core/mat.hpp:3442:20: note:   no known conversion for argument 1 from ‘cv::Matx<float, 3, 1>’ to ‘const cv::Mat&’
/usr/include/opencv2/core/mat.hpp:3441:20: note: candidate: cv::MatExpr cv::operator/(const cv::Mat&, const cv::Mat&)
 CV_EXPORTS MatExpr operator / (const Mat& a, const Mat& b);
                    ^~~~~~~~
/usr/include/opencv2/core/mat.hpp:3441:20: note:   no known conversion for argument 1 from ‘cv::Matx<float, 3, 1>’ to ‘const cv::Mat&’
In file included from /usr/include/opencv2/core.hpp:58:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/types.hpp:2184:14: note: candidate: template<class _Tp> cv::Scalar_<_Tp> cv::operator/(const cv::Scalar_<_Tp>&, const cv::Scalar_<_Tp>&)
 Scalar_<_Tp> operator / (const Scalar_<_Tp>& a, const Scalar_<_Tp>& b)
              ^~~~~~~~
/usr/include/opencv2/core/types.hpp:2184:14: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const cv::Scalar_<_Tp>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:58:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/types.hpp:2177:14: note: candidate: template<class _Tp> cv::Scalar_<_Tp> cv::operator/(_Tp, const cv::Scalar_<_Tp>&)
 Scalar_<_Tp> operator / (_Tp a, const Scalar_<_Tp>& b)
              ^~~~~~~~
/usr/include/opencv2/core/types.hpp:2177:14: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   mismatched types ‘const cv::Scalar_<_Tp>’ and ‘float’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:58:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/types.hpp:2163:17: note: candidate: template<class _Tp> cv::Scalar_<double> cv::operator/(const cv::Scalar_<double>&, double)
 Scalar_<double> operator / (const Scalar_<double>& a, double alpha)
                 ^~~~~~~~
/usr/include/opencv2/core/types.hpp:2163:17: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   couldn't deduce template parameter ‘_Tp’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:58:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/types.hpp:2156:16: note: candidate: template<class _Tp> cv::Scalar_<float> cv::operator/(const cv::Scalar_<float>&, float)
 Scalar_<float> operator / (const Scalar_<float>& a, float alpha)
                ^~~~~~~~
/usr/include/opencv2/core/types.hpp:2156:16: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   couldn't deduce template parameter ‘_Tp’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:58:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/types.hpp:2147:14: note: candidate: template<class _Tp> cv::Scalar_<_Tp> cv::operator/(const cv::Scalar_<_Tp>&, _Tp)
 Scalar_<_Tp> operator / (const Scalar_<_Tp>& a, _Tp alpha)
              ^~~~~~~~
/usr/include/opencv2/core/types.hpp:2147:14: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const cv::Scalar_<_Tp>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:58:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/types.hpp:1623:12: note: candidate: template<class _Tp> cv::Size_<_Tp> cv::operator/(const cv::Size_<_Tp>&, _Tp)
 Size_<_Tp> operator / (const Size_<_Tp>& a, _Tp b)
            ^~~~~~~~
/usr/include/opencv2/core/types.hpp:1623:12: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const cv::Size_<_Tp>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:58:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/types.hpp:1552:14: note: candidate: template<class _Tp> cv::Point3_<_Tp> cv::operator/(const cv::Point3_<_Tp>&, double)
 Point3_<_Tp> operator / (const Point3_<_Tp>& a, double b)
              ^~~~~~~~
/usr/include/opencv2/core/types.hpp:1552:14: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const cv::Point3_<_Tp>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:58:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/types.hpp:1544:14: note: candidate: template<class _Tp> cv::Point3_<_Tp> cv::operator/(const cv::Point3_<_Tp>&, float)
 Point3_<_Tp> operator / (const Point3_<_Tp>& a, float b)
              ^~~~~~~~
/usr/include/opencv2/core/types.hpp:1544:14: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const cv::Point3_<_Tp>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:58:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/types.hpp:1536:14: note: candidate: template<class _Tp> cv::Point3_<_Tp> cv::operator/(const cv::Point3_<_Tp>&, int)
 Point3_<_Tp> operator / (const Point3_<_Tp>& a, int b)
              ^~~~~~~~
/usr/include/opencv2/core/types.hpp:1536:14: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const cv::Point3_<_Tp>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:58:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/types.hpp:1301:13: note: candidate: template<class _Tp> cv::Point_<_Tp> cv::operator/(const cv::Point_<_Tp>&, double)
 Point_<_Tp> operator / (const Point_<_Tp>& a, double b)
             ^~~~~~~~
/usr/include/opencv2/core/types.hpp:1301:13: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const cv::Point_<_Tp>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:58:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/types.hpp:1293:13: note: candidate: template<class _Tp> cv::Point_<_Tp> cv::operator/(const cv::Point_<_Tp>&, float)
 Point_<_Tp> operator / (const Point_<_Tp>& a, float b)
             ^~~~~~~~
/usr/include/opencv2/core/types.hpp:1293:13: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const cv::Point_<_Tp>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:58:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/types.hpp:1285:13: note: candidate: template<class _Tp> cv::Point_<_Tp> cv::operator/(const cv::Point_<_Tp>&, int)
 Point_<_Tp> operator / (const Point_<_Tp>& a, int b)
             ^~~~~~~~
/usr/include/opencv2/core/types.hpp:1285:13: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const cv::Point_<_Tp>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:58:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/types.hpp:1054:14: note: candidate: template<class _Tp> cv::Complex<_Tp> cv::operator/(_Tp, const cv::Complex<_Tp>&)
 Complex<_Tp> operator / (_Tp b, const Complex<_Tp>& a)
              ^~~~~~~~
/usr/include/opencv2/core/types.hpp:1054:14: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   mismatched types ‘const cv::Complex<_Tp>’ and ‘float’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:58:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/types.hpp:1047:14: note: candidate: template<class _Tp> cv::Complex<_Tp> cv::operator/(const cv::Complex<_Tp>&, _Tp)
 Complex<_Tp> operator / (const Complex<_Tp>& a, _Tp b)
              ^~~~~~~~
/usr/include/opencv2/core/types.hpp:1047:14: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const cv::Complex<_Tp>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:58:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/types.hpp:1033:14: note: candidate: template<class _Tp> cv::Complex<_Tp> cv::operator/(const cv::Complex<_Tp>&, const cv::Complex<_Tp>&)
 Complex<_Tp> operator / (const Complex<_Tp>& a, const Complex<_Tp>& b)
              ^~~~~~~~
/usr/include/opencv2/core/types.hpp:1033:14: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const cv::Complex<_Tp>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:57:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/matx.hpp:1376:14: note: candidate: template<class _Tp, int cn> cv::Vec<_Tp, m> cv::operator/(const cv::Vec<_Tp, m>&, double)
 Vec<_Tp, cn> operator / (const Vec<_Tp, cn>& a, double alpha)
              ^~~~~~~~
/usr/include/opencv2/core/matx.hpp:1376:14: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const cv::Vec<_Tp, m>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:57:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/matx.hpp:1370:14: note: candidate: template<class _Tp, int cn> cv::Vec<_Tp, m> cv::operator/(const cv::Vec<_Tp, m>&, float)
 Vec<_Tp, cn> operator / (const Vec<_Tp, cn>& a, float alpha)
              ^~~~~~~~
/usr/include/opencv2/core/matx.hpp:1370:14: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const cv::Vec<_Tp, m>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
In file included from /usr/include/opencv2/core.hpp:57:0,
                 from /usr/include/opencv2/core/core.hpp:48,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:25,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/include/opencv2/core/matx.hpp:1364:14: note: candidate: template<class _Tp, int cn> cv::Vec<_Tp, m> cv::operator/(const cv::Vec<_Tp, m>&, int)
 Vec<_Tp, cn> operator / (const Vec<_Tp, cn>& a, int alpha)
              ^~~~~~~~
/usr/include/opencv2/core/matx.hpp:1364:14: note:   template argument deduction/substitution failed:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:629:58: note:   ‘cv::Matx<float, 3, 1>’ is not derived from ‘const cv::Vec<_Tp, m>’
                 x3D = x3D_h.get_minor<3,1>(0,0) / x3D_h(3);
                                                          ^
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:491:22: warning: unused variable ‘invfx2’ [-Wunused-variable]
         const float &invfx2 = pKF2->invfx;
                      ^~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:492:22: warning: unused variable ‘invfy2’ [-Wunused-variable]
         const float &invfy2 = pKF2->invfy;
                      ^~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:434:18: warning: unused variable ‘invfx1’ [-Wunused-variable]
     const float &invfx1 = mpCurrentKeyFrame->invfx;
                  ^~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:435:18: warning: unused variable ‘invfy1’ [-Wunused-variable]
     const float &invfy1 = mpCurrentKeyFrame->invfy;
                  ^~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc: In member function ‘void ORB_SLAM3::LocalMapping::KeyFrameCulling()’:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1045:75: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
                                                                      : (i < pKF -> NLeft) ? pKF -> mvKeys[i].octave
                                                                         ~~^~~~~~~~~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc: In member function ‘void ORB_SLAM3::LocalMapping::InitializeIMU(float, float, bool)’:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1284:33: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if(mpAtlas->KeyFramesInMap()<nMinKF)
        ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1298:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if(vpKF.size()<nMinKF)
        ~~~~~~~~~~~^~~~~~~
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc: In member function ‘void ORB_SLAM3::LocalMapping::ScaleRefinement()’:
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1456:15: warning: unused variable ‘N’ [-Wunused-variable]
     const int N = vpKF.size();
               ^
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1489:12: warning: unused variable ‘t_inertial_only’ [-Wunused-variable]
     double t_inertial_only = std::chrono::duration_cast<std::chrono::duration<double> >(t1 - t0).count();
            ^~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Geometry:40:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:27,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Geometry/Quaternion.h: In instantiation of ‘Eigen::Quaternion<typename Eigen::internal::traits<T>::Scalar> Eigen::QuaternionBase<Derived>::operator*(const Eigen::QuaternionBase<OtherDerived>&) const [with OtherDerived = Eigen::Quaternion<double>; Derived = Eigen::Quaternion<double>; typename Eigen::internal::traits<T>::Scalar = double]’:
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:268:23:   required from here
/usr/local/include/eigen3/Eigen/src/Geometry/Quaternion.h:443:63: warning: enum constant in boolean context [-Wint-in-bool-context]
                          internal::traits<Derived>::IsAligned && internal::traits<OtherDerived>::IsAligned>::run(*this, other);
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Geometry/Quaternion.h:443:63: warning: enum constant in boolean context [-Wint-in-bool-context]
In file included from /usr/local/include/eigen3/Eigen/Core:284:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:197:7:   required from ‘Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::operator const PlainObject&() const [with LhsNested = const Eigen::Matrix<double, 3, 3>&; RhsNested = const Eigen::Matrix<double, 3, 3>&; int NestingFlags = 6; Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::PlainObject = Eigen::Matrix<double, 3, 3>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:246:35:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 1>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 1>&, 6> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 1>&, 6>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 1>&, 6>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:197:7:   required from ‘Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::operator const PlainObject&() const [with LhsNested = const Eigen::Matrix<double, 3, 3>&; RhsNested = const Eigen::Matrix<double, 3, 1>&; int NestingFlags = 6; Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::PlainObject = Eigen::Matrix<double, 3, 1>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:256:48:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, Eigen::Matrix<double, 3, 3> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; OtherDerived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:263:30:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Block<Eigen::Matrix<double, 6, 6>, -1, -1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:266:48:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>, Eigen::Matrix<double, 3, 3> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>; OtherDerived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, -1, -1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:274:65:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>, Eigen::Matrix<double, 3, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>; OtherDerived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Block<Eigen::Block<Eigen::Matrix<double, 4, 4>, 4, 1, true>, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:275:57:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false>, Eigen::Matrix<double, 3, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false>; OtherDerived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:293:44:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 1>, Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 1>; OtherDerived = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/kanishk/ros_ws/pyslam/thirdparty/pangolin/include/pangolin/handler/handler.h:87:82:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 1>, Eigen::Matrix<double, 3, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 1>; OtherDerived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/kanishk/ros_ws/pyslam/thirdparty/pangolin/include/pangolin/handler/handler.h:87:82:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::Matrix<double, 3, 3> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3_ops.hpp:37:12:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 2, 1>, Eigen::Matrix<double, 2, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 2, 1>; OtherDerived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3_ops.hpp:54:12:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 4, 1>, Eigen::Matrix<double, 4, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 4, 1>; Derived = Eigen::Matrix<double, 4, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 4, 1>; Derived = Eigen::Matrix<double, 4, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 4, 1>; OtherDerived = Eigen::Matrix<double, 4, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 4, 1>; Derived = Eigen::Matrix<double, 4, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 4; int _Cols = 1; int _Options = 0; int _MaxRows = 4; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3_ops.hpp:82:12:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 3, 1>, Eigen::Matrix<double, 3, 1> >, Eigen::Matrix<double, 3, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::Matrix<double, 3, 1>; BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, 3, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 3, 1>, Eigen::Matrix<double, 3, 1> >; OtherDerived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 3, 1>, Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, 3, 1>; Rhs = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:106:29:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:120:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 7, 1>, Eigen::Matrix<double, 7, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 7, 1>; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 7, 1>; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 7, 1>; OtherDerived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 7, 1>; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 7; int _Cols = 1; int _Options = 0; int _MaxRows = 7; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:147:16:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 6, 1>, Eigen::Matrix<double, 6, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 1>; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 1>; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 6, 1>; OtherDerived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 1>; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 6; int _Cols = 1; int _Options = 0; int _MaxRows = 6; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:163:16:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 6, 6>, Eigen::Matrix<double, 6, 6> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 6>; Derived = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 6>; Derived = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 6, 6>; OtherDerived = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 6>; Derived = Eigen::Matrix<double, 6, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 6; int _Cols = 6; int _Options = 0; int _MaxRows = 6; int _MaxCols = 6]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:267:16:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 4, 4>, Eigen::Matrix<double, 4, 4> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 4, 4>; Derived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 4, 4>; Derived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 4, 4>; OtherDerived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 4, 4>; Derived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 4; int _Cols = 4; int _Options = 0; int _MaxRows = 4; int _MaxCols = 4]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:277:16:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, 4, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >’:
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; BinaryOp = Eigen::internal::scalar_product_op<double, double>; Lhs = Eigen::Matrix<double, 4, 1>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, 4, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Matrix<double, 4, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_product_op<double, double>; Lhs = Eigen::Matrix<double, 4, 1>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:176:7:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<double, 4, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:282:27:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>, Eigen::Matrix<double, 3, 3> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>; OtherDerived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 3, false>]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:986:12:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options>& Eigen::Transform<Scalar, Dim, Mode, _Options>::operator=(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:264:11:   required from ‘Eigen::Transform<Scalar, Dim, Mode, _Options>::Transform(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:292:65:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 3, 1>, Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >’:
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, 3, 1>; Rhs = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 3, 1>, Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >; OtherDerived = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, 3, 1>, Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> > >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, 3, 1>; Rhs = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 3, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 3, 1>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_sba.h:55:20:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 6, 1>, Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 6, 1>; OtherDerived = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<double, 6, 1>, 0, Eigen::Stride<0, 0> >; _Scalar = double; int _Rows = 6; int _Cols = 1; int _Options = 0; int _MaxRows = 6; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:75:36:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:140:43:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >, const Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:145:26:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:166:39:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3>&, 6> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3>&, 6> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3>&, 6> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3>&, 6> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3>&, 6> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3>&, 6> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:215:48:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 7, 1>, Eigen::Map<Eigen::Matrix<double, 7, 1>, 0, Eigen::Stride<0, 0> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, 7, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, 7, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 7, 1>; OtherDerived = Eigen::Map<Eigen::Matrix<double, 7, 1>, 0, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, 7, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, 7, 1>, 0, Eigen::Stride<0, 0> >; _Scalar = double; int _Rows = 7; int _Cols = 1; int _Options = 0; int _MaxRows = 7; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:67:20:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4> >, Eigen::Matrix<double, -1, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::Matrix<double, -1, 1>; BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4> >; OtherDerived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4> >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4> >, Eigen::Matrix<double, -1, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::Matrix<double, -1, 1>; BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4> >; OtherDerived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4> >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:68:76:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:37:134:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SwapWrapper<Eigen::Matrix<double, 3, 1> >, Eigen::Matrix<double, 3, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::SwapWrapper<Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:384:7:   required from ‘void Eigen::DenseBase<Derived>::swap(Eigen::PlainObjectBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:805:5:   required from ‘static void Eigen::internal::matrix_swap_impl<MatrixTypeA, MatrixTypeB, SwapPointers>::run(MatrixTypeA&, MatrixTypeB&) [with MatrixTypeA = Eigen::Matrix<double, 3, 1>; MatrixTypeB = Eigen::Matrix<double, 3, 1>; bool SwapPointers = false]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:682:81:   required from ‘void Eigen::PlainObjectBase<Derived>::_swap(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:334:7:   required from ‘void Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::swap(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:224:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:126:30:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SwapWrapper<Eigen::Matrix<double, 6, 1> >, Eigen::Matrix<double, 6, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 1>; Derived = Eigen::SwapWrapper<Eigen::Matrix<double, 6, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:384:7:   required from ‘void Eigen::DenseBase<Derived>::swap(Eigen::PlainObjectBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 1>; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:805:5:   required from ‘static void Eigen::internal::matrix_swap_impl<MatrixTypeA, MatrixTypeB, SwapPointers>::run(MatrixTypeA&, MatrixTypeB&) [with MatrixTypeA = Eigen::Matrix<double, 6, 1>; MatrixTypeB = Eigen::Matrix<double, 6, 1>; bool SwapPointers = false]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:682:81:   required from ‘void Eigen::PlainObjectBase<Derived>::_swap(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 1>; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:334:7:   required from ‘void Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::swap(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 6, 1>; _Scalar = double; int _Rows = 6; int _Cols = 1; int _Options = 0; int _MaxRows = 6; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:224:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 6; int _Cols = 1; int _Options = 0; int _MaxRows = 6; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:98:25:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SwapWrapper<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 3> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::SwapWrapper<Eigen::Matrix<double, 3, 3> >]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:384:7:   required from ‘void Eigen::DenseBase<Derived>::swap(Eigen::PlainObjectBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:805:5:   required from ‘static void Eigen::internal::matrix_swap_impl<MatrixTypeA, MatrixTypeB, SwapPointers>::run(MatrixTypeA&, MatrixTypeB&) [with MatrixTypeA = Eigen::Matrix<double, 3, 3>; MatrixTypeB = Eigen::Matrix<double, 3, 3>; bool SwapPointers = false]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:682:81:   required from ‘void Eigen::PlainObjectBase<Derived>::_swap(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:334:7:   required from ‘void Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::swap(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 3>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:224:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:175:29:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SwapWrapper<Eigen::Matrix<double, 7, 1> >, Eigen::Matrix<double, 7, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 7, 1>; Derived = Eigen::SwapWrapper<Eigen::Matrix<double, 7, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:384:7:   required from ‘void Eigen::DenseBase<Derived>::swap(Eigen::PlainObjectBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 7, 1>; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:805:5:   required from ‘static void Eigen::internal::matrix_swap_impl<MatrixTypeA, MatrixTypeB, SwapPointers>::run(MatrixTypeA&, MatrixTypeB&) [with MatrixTypeA = Eigen::Matrix<double, 7, 1>; MatrixTypeB = Eigen::Matrix<double, 7, 1>; bool SwapPointers = false]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:682:81:   required from ‘void Eigen::PlainObjectBase<Derived>::_swap(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 7, 1>; Derived = Eigen::Matrix<double, 7, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:334:7:   required from ‘void Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::swap(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 7, 1>; _Scalar = double; int _Rows = 7; int _Cols = 1; int _Options = 0; int _MaxRows = 7; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:224:7:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 7; int _Cols = 1; int _Options = 0; int _MaxRows = 7; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h:113:27:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:63:7:   required from ‘const typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:284:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Matrix<double, -1, -1>; Derived2 = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; int Version = 0]’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:37:134:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
     const Index alignedStart = assign_traits<Derived1,Derived2>::DstIsAligned ? 0
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
                              : internal::first_aligned(&dst.coeffRef(0), size);
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
In file included from /usr/local/include/eigen3/Eigen/Core:284:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 1>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Geometry/RotationBase.h:128:32:   required from ‘static Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::run(const RotationDerived&, const OtherVectorType&) [with RotationDerived = Eigen::Quaternion<double>; OtherVectorType = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >; Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType = Eigen::Matrix<double, 3, 1>; typename RotationDerived::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Geometry/RotationBase.h:72:89:   required from ‘typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType Eigen::RotationBase<Derived, _Dim>::operator*(const Eigen::EigenBase<OtherDerived>&) const [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Quaternion<double>; int _Dim = 3; typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType = Eigen::Matrix<double, 3, 1>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:126:30:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:172:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:194:74:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:172:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:240:58:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:172:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_identity_op<double>, Eigen::Matrix<double, 3, 3> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:250:52:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Matrix<double, 4, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >’:
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; BinaryOp = Eigen::internal::scalar_quotient_op<double, double>; Lhs = Eigen::Matrix<double, 4, 1>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Matrix<double, 4, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Matrix<double, 4, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> > >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_quotient_op<double, double>; Lhs = Eigen::Matrix<double, 4, 1>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:185:7:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Matrix<double, 4, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Dot.h:156:9:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Matrix<double, 4, 1>]’
/usr/local/include/eigen3/Eigen/src/Geometry/Quaternion.h:123:29:   required from ‘void Eigen::QuaternionBase<Derived>::normalize() [with Derived = Eigen::Quaternion<double>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:284:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false> >; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false> >; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:334:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 3, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:987:3:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options>& Eigen::Transform<Scalar, Dim, Mode, _Options>::operator=(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:264:11:   required from ‘Eigen::Transform<Scalar, Dim, Mode, _Options>::Transform(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:292:65:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 2, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 2, 1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:172:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> >; _Scalar = double; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:128:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:172:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/types_six_dof_expmap.h:160:69:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:172:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 3, 3>&, const Eigen::Matrix<double, 3, 3>&, 6> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:99:39:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:172:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:106:74:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:172:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 3>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:117:34:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3>&, 6> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3>&, 6>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3>&, 6>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3>&, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3>&, 6>; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3>&, 6>; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:127:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >; Rhs = const Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3>&, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:27:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<typename Eigen::internal::traits<T>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator+(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >, const Eigen::Matrix<double, 3, 3>&, 6>; Derived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >; typename Eigen::internal::traits<T>::Scalar = double]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:215:38:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SwapWrapper<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; Derived = Eigen::SwapWrapper<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false> >]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:375:7:   required from ‘void Eigen::DenseBase<Derived>::swap(const Eigen::DenseBase<OtherDerived>&, int) [with OtherDerived = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>; Derived = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, 1, -1, false>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:358:9:   required from ‘static Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::blocked_lu(Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, Scalar*, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, PivIndex*, PivIndex&, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index) [with Scalar = double; int StorageOrder = 0; PivIndex = int; Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index = long int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:387:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::Index&) [with MatrixType = Eigen::Matrix<double, 3, 3>; TranspositionType = Eigen::Transpositions<3, 3, int>; typename TranspositionType::Index = int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:408:31:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::PartialPivLU<MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:215:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::PartialPivLU<MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:503:10:   required from ‘const Eigen::PartialPivLU<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::lu() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<int, 3, 1>, Eigen::Matrix<int, 3, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<int, 3, 1>; Derived = Eigen::Matrix<int, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<int, 3, 1>; Derived = Eigen::Matrix<int, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<int, 3, 1>; OtherDerived = Eigen::Matrix<int, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<int, 3, 1>; Derived = Eigen::Matrix<int, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:303:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&) [with _Scalar = int; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/PermutationMatrix.h:338:89:   required from ‘Eigen::PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, IndexType>::PermutationMatrix(const Eigen::PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, IndexType>&) [with int SizeAtCompileTime = 3; int MaxSizeAtCompileTime = 3; IndexType = int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:47:38:   required from ‘const Eigen::PartialPivLU<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::lu() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:284:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::Matrix<double, -1, 1>; int Version = 0]’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:63:7:   required from ‘const typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Derived = Eigen::Matrix<double, -1, -1>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
     const Index alignedStart = assign_traits<Derived1,Derived2>::DstIsAligned ? 0
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
                              : internal::first_aligned(&dst.coeffRef(0), size);
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
In file included from /usr/local/include/eigen3/Eigen/Core:284:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 1>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >, const Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Geometry/Quaternion.h:473:53:   required from ‘Eigen::QuaternionBase<Derived>::Vector3 Eigen::QuaternionBase<Derived>::_transformVector(const Vector3&) const [with Derived = Eigen::Quaternion<double>; Eigen::QuaternionBase<Derived>::Vector3 = Eigen::Matrix<double, 3, 1>; typename Eigen::internal::traits<T>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Geometry/RotationBase.h:128:32:   required from ‘static Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::run(const RotationDerived&, const OtherVectorType&) [with RotationDerived = Eigen::Quaternion<double>; OtherVectorType = Eigen::Matrix<double, 3, 1>; Eigen::internal::rotation_base_generic_product_selector<RotationDerived, OtherVectorType, true>::ReturnType = Eigen::Matrix<double, 3, 1>; typename RotationDerived::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Geometry/RotationBase.h:72:89:   required from ‘typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType Eigen::RotationBase<Derived, _Dim>::operator*(const Eigen::EigenBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Quaternion<double>; int _Dim = 3; typename Eigen::internal::rotation_base_generic_product_selector<Derived, OtherDerived, OtherDerived:: IsVectorAtCompileTime>::ReturnType = Eigen::Matrix<double, 3, 1>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:106:29:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SwapWrapper<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; Derived = Eigen::SwapWrapper<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false> >]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:375:7:   required from ‘void Eigen::DenseBase<Derived>::swap(const Eigen::DenseBase<OtherDerived>&, int) [with OtherDerived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>; Derived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:268:11:   required from ‘static Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::unblocked_lu(Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::MatrixType&, PivIndex*, PivIndex&) [with Scalar = double; int StorageOrder = 0; PivIndex = int; Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index = long int; Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::MatrixType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:314:26:   required from ‘static Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::blocked_lu(Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, Scalar*, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, PivIndex*, PivIndex&, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index) [with Scalar = double; int StorageOrder = 0; PivIndex = int; Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index = long int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:387:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::Index&) [with MatrixType = Eigen::Matrix<double, 3, 3>; TranspositionType = Eigen::Transpositions<3, 3, int>; typename TranspositionType::Index = int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:408:31:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::PartialPivLU<MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:215:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::PartialPivLU<MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:503:10:   required from ‘const Eigen::PartialPivLU<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::lu() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:329:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘static void Eigen::internal::general_matrix_vector_product<Index, LhsScalar, 0, ConjugateLhs, RhsScalar, ConjugateRhs, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, 0, ConjugateLhs, RhsScalar, ConjugateRhs, Version>::ResScalar*, Index, RhsScalar) [with Index = long int; LhsScalar = double; bool ConjugateLhs = false; RhsScalar = double; bool ConjugateRhs = false; int Version = 0; Eigen::internal::general_matrix_vector_product<Index, LhsScalar, 0, ConjugateLhs, RhsScalar, ConjugateRhs, Version>::ResScalar = double]’:
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:460:110:   required from ‘static void Eigen::internal::gemv_selector<2, 0, true>::run(const ProductType&, Dest&, const typename ProductType::Scalar&) [with ProductType = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Dest = Eigen::Matrix<double, -1, 1>; typename ProductType::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:344:92:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:109:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:149:44:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:145:33: warning: enum constant in boolean context [-Wint-in-bool-context]
   Index offset1 = (FirstAligned && alignmentStep==1?3:1);
                    ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:146:33: warning: enum constant in boolean context [-Wint-in-bool-context]
   Index offset3 = (FirstAligned && alignmentStep==1?1:3);
                    ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘static void Eigen::internal::general_matrix_vector_product<Index, LhsScalar, 1, ConjugateLhs, RhsScalar, ConjugateRhs, Version>::run(Index, Index, const LhsScalar*, Index, const RhsScalar*, Index, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, 1, ConjugateLhs, RhsScalar, ConjugateRhs, Version>::ResScalar*, Index, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, 1, ConjugateLhs, RhsScalar, ConjugateRhs, Version>::ResScalar) [with Index = long int; LhsScalar = double; bool ConjugateLhs = false; RhsScalar = double; bool ConjugateRhs = false; int Version = 0; Eigen::internal::general_matrix_vector_product<Index, LhsScalar, 1, ConjugateLhs, RhsScalar, ConjugateRhs, Version>::ResScalar = double]’:
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:519:110:   required from ‘static void Eigen::internal::gemv_selector<2, 1, true>::run(const ProductType&, Dest&, const typename ProductType::Scalar&) [with ProductType = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Dest = Eigen::Matrix<double, -1, 1>; typename ProductType::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:344:92:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:109:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:149:44:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:68:76:   required from here
/usr/local/include/eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:408:33: warning: enum constant in boolean context [-Wint-in-bool-context]
   Index offset1 = (FirstAligned && alignmentStep==1?3:1);
                    ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/products/GeneralMatrixVector.h:409:33: warning: enum constant in boolean context [-Wint-in-bool-context]
   Index offset3 = (FirstAligned && alignmentStep==1?1:3);
                    ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:284:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:172:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 3> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:334:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 3>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:324:14:   required from ‘void Eigen::DenseBase<Derived>::fill(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 3>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3_ops.hpp:30:14:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 1>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:172:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:334:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 3, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, 3, 1>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:55:20:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false> >; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false> >; Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:334:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Block<Eigen::Matrix<double, 4, 4>, 1, 3, false>]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:1105:5:   required from ‘static void Eigen::internal::transform_make_affine<Mode>::run(MatrixType&) [with MatrixType = Eigen::Matrix<double, 4, 4>; int Mode = 1]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:614:52:   required from ‘void Eigen::Transform<Scalar, Dim, Mode, _Options>::makeAffine() [with _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:988:13:   required from ‘Eigen::Transform<Scalar, Dim, Mode, Options>& Eigen::Transform<Scalar, Dim, Mode, _Options>::operator=(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/usr/local/include/eigen3/Eigen/src/Geometry/Transform.h:264:11:   required from ‘Eigen::Transform<Scalar, Dim, Mode, _Options>::Transform(const Eigen::RotationBase<Derived, Dim>&) [with Derived = Eigen::Quaternion<double>; _Scalar = double; int _Dim = 3; int _Mode = 1; int _Options = 0]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:292:65:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >, Eigen::Matrix<double, -1, 1> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; OtherDerived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:456:48:   required from ‘static void Eigen::internal::gemv_selector<2, 0, true>::run(const ProductType&, Dest&, const typename ProductType::Scalar&) [with ProductType = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Dest = Eigen::Matrix<double, -1, 1>; typename ProductType::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:344:92:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:109:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:149:44:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >; OtherDerived = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:515:81:   required from ‘static void Eigen::internal::gemv_selector<2, 1, true>::run(const ProductType&, Dest&, const typename ProductType::Scalar&) [with ProductType = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Dest = Eigen::Matrix<double, -1, 1>; typename ProductType::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:344:92:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:109:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:149:44:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:68:76:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 4, 4>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >; Derived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >; Derived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 4, 4>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >; Derived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:172:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 4, 4> >; _Scalar = double; int _Rows = 4; int _Cols = 4; int _Options = 0; int _MaxRows = 4; int _MaxCols = 4]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:334:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, 4, 4>; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:755:5:   required from ‘static Derived& Eigen::internal::setIdentity_impl<Derived, true>::run(Derived&) [with Derived = Eigen::Matrix<double, 4, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:774:50:   required from ‘Derived& Eigen::MatrixBase<Derived>::setIdentity() [with Derived = Eigen::Matrix<double, 4, 4>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/se3quat.h:273:40:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; BinaryOp = Eigen::internal::scalar_quotient_op<double, double>; Lhs = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_quotient_op<double, double>; Lhs = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>; Rhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:185:7:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:314:26:   required from ‘static Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::blocked_lu(Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, Scalar*, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, PivIndex*, PivIndex&, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index) [with Scalar = double; int StorageOrder = 0; PivIndex = int; Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index = long int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:387:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::Index&) [with MatrixType = Eigen::Matrix<double, 3, 3>; TranspositionType = Eigen::Transpositions<3, 3, int>; typename TranspositionType::Index = int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:408:31:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::PartialPivLU<MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:215:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::PartialPivLU<MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:503:10:   required from ‘const Eigen::PartialPivLU<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::lu() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, -1>, Eigen::Matrix<double, -1, -1> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:220:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:370:30:   required from ‘static Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::blocked_lu(Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, Scalar*, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, PivIndex*, PivIndex&, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index) [with Scalar = double; int StorageOrder = 0; PivIndex = int; Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index = long int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:387:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::Index&) [with MatrixType = Eigen::Matrix<double, 3, 3>; TranspositionType = Eigen::Transpositions<3, 3, int>; typename TranspositionType::Index = int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:408:31:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::PartialPivLU<MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:215:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::PartialPivLU<MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:503:10:   required from ‘const Eigen::PartialPivLU<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::lu() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:284:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived2 = Eigen::Matrix<double, -1, 1>; int Version = 0]’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; OtherDerived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:456:48:   required from ‘static void Eigen::internal::gemv_selector<2, 0, true>::run(const ProductType&, Dest&, const typename ProductType::Scalar&) [with ProductType = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Dest = Eigen::Matrix<double, -1, 1>; typename ProductType::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:344:92:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:109:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:149:44:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
     const Index alignedStart = assign_traits<Derived1,Derived2>::DstIsAligned ? 0
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
                              : internal::first_aligned(&dst.coeffRef(0), size);
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Matrix<double, -1, -1>; Derived2 = Eigen::Matrix<double, -1, -1>; int Version = 0]’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; Derived = Eigen::Matrix<double, -1, -1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:220:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:370:30:   required from ‘static Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::blocked_lu(Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, Scalar*, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, PivIndex*, PivIndex&, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index) [with Scalar = double; int StorageOrder = 0; PivIndex = int; Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index = long int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:387:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::Index&) [with MatrixType = Eigen::Matrix<double, 3, 3>; TranspositionType = Eigen::Transpositions<3, 3, int>; typename TranspositionType::Index = int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:408:31:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::PartialPivLU<MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:215:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::PartialPivLU<MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:503:10:   required from ‘const Eigen::PartialPivLU<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::lu() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
In file included from /usr/local/include/eigen3/Eigen/Core:284:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:334:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:452:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:109:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:149:44:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >’:
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, -1, 1>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, -1, 1>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:470:14:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:109:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:149:44:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:109:43:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:149:44:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:284:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived2 = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; int Version = 0]’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:334:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Eigen::DenseBase<Derived>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:452:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:109:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:149:44:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
     const Index alignedStart = assign_traits<Derived1,Derived2>::DstIsAligned ? 0
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
                              : internal::first_aligned(&dst.coeffRef(0), size);
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >; Derived2 = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; int Version = 0]’:
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, -1, 1>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > > >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Matrix<double, -1, 1>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:470:14:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:109:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:149:44:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
In file included from /usr/local/include/eigen3/Eigen/Core:284:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; Derived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>; OtherDerived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:564:57:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/MapBase.h:238:39:   required from ‘Derived& Eigen::MapBase<Derived, 1>::operator=(const Eigen::MapBase<Derived, 1>&) [with Derived = Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Block.h:321:5:   required from ‘Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>& Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::operator=(const Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>&) [with XprType = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>; int BlockRows = -1; int BlockCols = -1; bool InnerPanel = false]’
/usr/local/include/eigen3/Eigen/src/Core/Block.h:155:5:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:368:9:   required from ‘static Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::blocked_lu(Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, Scalar*, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, PivIndex*, PivIndex&, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index) [with Scalar = double; int StorageOrder = 0; PivIndex = int; Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index = long int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:387:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::Index&) [with MatrixType = Eigen::Matrix<double, 3, 3>; TranspositionType = Eigen::Transpositions<3, 3, int>; typename TranspositionType::Index = int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:408:31:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::PartialPivLU<MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:215:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::PartialPivLU<MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:503:10:   required from ‘const Eigen::PartialPivLU<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::lu() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:284:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; int Version = 0]’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/CwiseNullaryOp.h:501:21:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:109:43:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:149:44:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
     const Index alignedStart = assign_traits<Derived1,Derived2>::DstIsAligned ? 0
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
                              : internal::first_aligned(&dst.coeffRef(0), size);
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
In file included from /usr/local/include/eigen3/Eigen/Core:284:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, -1, 1>, Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:109:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:149:44:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >’:
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> > >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>; Rhs = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:210:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> >; Derived = Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, -1, 1, true>]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:268:137:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:314:26:   required from ‘static Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::blocked_lu(Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, Scalar*, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index, PivIndex*, PivIndex&, Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index) [with Scalar = double; int StorageOrder = 0; PivIndex = int; Eigen::internal::partial_lu_impl<Scalar, StorageOrder, PivIndex>::Index = long int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:387:17:   required from ‘void Eigen::internal::partial_lu_inplace(MatrixType&, TranspositionType&, typename TranspositionType::Index&) [with MatrixType = Eigen::Matrix<double, 3, 3>; TranspositionType = Eigen::Transpositions<3, 3, int>; typename TranspositionType::Index = int]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:408:31:   required from ‘Eigen::PartialPivLU<MatrixType>& Eigen::PartialPivLU<MatrixType>::compute(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::PartialPivLU<MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:215:10:   required from ‘Eigen::PartialPivLU<MatrixType>::PartialPivLU(const MatrixType&) [with _MatrixType = Eigen::Matrix<double, 3, 3>; Eigen::PartialPivLU<MatrixType>::MatrixType = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/LU/PartialPivLU.h:503:10:   required from ‘const Eigen::PartialPivLU<Eigen::Matrix<typename Eigen::internal::traits<T>::Scalar, Eigen::internal::traits<T>::RowsAtCompileTime, Eigen::internal::traits<T>::ColsAtCompileTime, (AutoAlign | ((Eigen::internal::traits<T>::Flags & Eigen::RowMajorBit) ? RowMajor :  ColMajor)), Eigen::internal::traits<T>::MaxRowsAtCompileTime, Eigen::internal::traits<T>::MaxColsAtCompileTime> > Eigen::MatrixBase<Derived>::lu() const [with Derived = Eigen::Matrix<double, 3, 3>; typename Eigen::internal::traits<T>::Scalar = double]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:22:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false> >, Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>; Derived = Eigen::SwapWrapper<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false> >]’
/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:375:7:   required from ‘void Eigen::DenseBase<Derived>::swap(const Eigen::DenseBase<OtherDerived>&, int) [with OtherDerived = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/PermutationMatrix.h:609:19:   required from ‘void Eigen::internal::permut_matrix_product_retval<PermutationType, MatrixType, Side, Transposed>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; PermutationType = Eigen::PermutationMatrix<3, 3, int>; MatrixType = Eigen::Matrix<double, 3, 1>; int Side = 1; bool Transposed = false]’
/usr/local/include/eigen3/Eigen/src/Core/ReturnByValue.h:61:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::permut_matrix_product_retval<Eigen::PermutationMatrix<3, 3, int>, Eigen::Matrix<double, 3, 1>, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:529:101:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::evalTo(ActualDerived&, const ActualOtherDerived&) [with ActualDerived = Eigen::Matrix<double, 3, 1>; ActualOtherDerived = Eigen::ReturnByValue<Eigen::internal::permut_matrix_product_retval<Eigen::PermutationMatrix<3, 3, int>, Eigen::Matrix<double, 3, 1>, 1, false> >; Derived = Eigen::Matrix<double, 3, 1>; OtherDerived = Eigen::internal::permut_matrix_product_retval<Eigen::PermutationMatrix<3, 3, int>, Eigen::Matrix<double, 3, 1>, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:585:71:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ReturnByValue.h:61:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:529:101:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::evalTo(ActualDerived&, const ActualOtherDerived&) [with ActualDerived = Eigen::Matrix<double, 3, 1>; ActualOtherDerived = Eigen::ReturnByValue<Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::Matrix<double, 3, 1>; OtherDerived = Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:585:71:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:421:29:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:190:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:31:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/include/eigen3/Eigen/Core:284:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘static void Eigen::internal::assign_impl<Derived1, Derived2, 3, 0, Version>::run(Derived1&, const Derived2&) [with Derived1 = Eigen::Matrix<double, -1, 1>; Derived2 = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; int Version = 0]’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:507:85:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, 1>; OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::Map<Eigen::Matrix<double, -1, 1>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:118:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, const Scalar&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:109:71:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Lhs = Eigen::Matrix<double, -1, -1>; Rhs = Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:149:44:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>; Rhs = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::GeneralProduct<Eigen::Matrix<double, -1, -1>, Eigen::Block<const Eigen::Map<const Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>, 4>; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >, -1, 1, false>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/core/matrix_operations.h:50:64:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:402:79: warning: enum constant in boolean context [-Wint-in-bool-context]
     const Index alignedStart = assign_traits<Derived1,Derived2>::DstIsAligned ? 0
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
                              : internal::first_aligned(&dst.coeffRef(0), size);
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
In file included from /usr/local/include/eigen3/Eigen/Core:284:0,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/ImuTypes.h:26,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/Frame.h:28,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/MapPoint.h:24,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/KeyFrame.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/include/LocalMapping.h:23,
                 from /home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:21:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>, Eigen::Block<const Eigen::Matrix<double, 3, 1>, 1, 1, false> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Matrix<double, 3, 1>, 1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>; OtherDerived = Eigen::Block<const Eigen::Matrix<double, 3, 1>, 1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<const Eigen::Matrix<double, 3, 1>, 1, 1, false>; Derived = Eigen::Block<Eigen::Matrix<double, 3, 1>, 1, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/PermutationMatrix.h:625:11:   required from ‘void Eigen::internal::permut_matrix_product_retval<PermutationType, MatrixType, Side, Transposed>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; PermutationType = Eigen::PermutationMatrix<3, 3, int>; MatrixType = Eigen::Matrix<double, 3, 1>; int Side = 1; bool Transposed = false]’
/usr/local/include/eigen3/Eigen/src/Core/ReturnByValue.h:61:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::permut_matrix_product_retval<Eigen::PermutationMatrix<3, 3, int>, Eigen::Matrix<double, 3, 1>, 1, false>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:529:101:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ReturnByValue.h:61:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:529:101:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::evalTo(ActualDerived&, const ActualOtherDerived&) [with ActualDerived = Eigen::Matrix<double, 3, 1>; ActualOtherDerived = Eigen::ReturnByValue<Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::Matrix<double, 3, 1>; OtherDerived = Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:585:71:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:421:29:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:190:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:31:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<bool, 3, 1, 0, 3, 1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, 3, 1, 0, 3, 1> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, 3, 1, 0, 3, 1> >; Derived = Eigen::Matrix<bool, 3, 1, 0, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, 3, 1, 0, 3, 1> >; Derived = Eigen::Matrix<bool, 3, 1, 0, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<bool, 3, 1, 0, 3, 1>; OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, 3, 1, 0, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, 3, 1, 0, 3, 1> >; Derived = Eigen::Matrix<bool, 3, 1, 0, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:638:114:   required from ‘void Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::false_type&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<bool>, Eigen::Matrix<bool, 3, 1, 0, 3, 1> >; Derived = Eigen::Matrix<bool, 3, 1, 0, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/eigen3/Eigen/src/Core/ReturnByValue.h:61:7:   required from ‘void Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 1>; Derived = Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:529:101:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::evalTo(ActualDerived&, const ActualOtherDerived&) [with ActualDerived = Eigen::Matrix<double, 3, 1>; ActualOtherDerived = Eigen::ReturnByValue<Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::Matrix<double, 3, 1>; OtherDerived = Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:585:71:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:421:29:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:190:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::solve_retval_base<Eigen::PartialPivLU<Eigen::Matrix<double, 3, 3> >, Eigen::Matrix<double, 3, 1> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/sim3.h:217:31:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 3, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 3, 1, true>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 3, 1, true>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 3, 1>, const Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 3, 1, true>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:116:29:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::linearizeOplus() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1521:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >, 2, 1, true>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >, 2, 1, true>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >, 2, 1, true>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, const Eigen::Matrix<double, 2, 1>, const Eigen::Matrix<double, 2, 1> > >; Derived = Eigen::Block<Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >, 2, 1, true>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:116:29:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::linearizeOplus() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1521:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 6, 3, 0, 6, 3>, Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> > > >, const Eigen::Matrix<double, 3, 3>&, 6> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> > > >, const Eigen::Matrix<double, 3, 3>&, 6>; Derived = Eigen::Matrix<double, 6, 3, 0, 6, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> > > >, const Eigen::Matrix<double, 3, 3>&, 6>; Derived = Eigen::Matrix<double, 6, 3, 0, 6, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:197:7:   required from ‘Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::operator const PlainObject&() const [with LhsNested = const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> > > >; RhsNested = const Eigen::Matrix<double, 3, 3>&; int NestingFlags = 6; Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::PlainObject = Eigen::Matrix<double, 6, 3, 0, 6, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:150:30:   required from ‘Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::CoeffBasedProduct(const Lhs&, const Rhs&) [with Lhs = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> > > >, const Eigen::Matrix<double, 3, 3>&, 6>; Rhs = Eigen::Matrix<double, 3, 1>; LhsNested = const Eigen::Matrix<double, 6, 3, 0, 6, 3>&; RhsNested = const Eigen::Matrix<double, 3, 1>&; int NestingFlags = 6]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:593:60:   required from ‘const typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> > > >, const Eigen::Matrix<double, 3, 3>&, 6>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 6>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:62:61:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1521:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 6, 3, 0, 6, 3>, Eigen::CoeffBasedProduct<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> > >, const Eigen::Matrix<double, 3, 3>&, 6> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> > >, const Eigen::Matrix<double, 3, 3>&, 6>; Derived = Eigen::Matrix<double, 6, 3, 0, 6, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> > >, const Eigen::Matrix<double, 3, 3>&, 6>; Derived = Eigen::Matrix<double, 6, 3, 0, 6, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:197:7:   required from ‘Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::operator const PlainObject&() const [with LhsNested = const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> > >; RhsNested = const Eigen::Matrix<double, 3, 3>&; int NestingFlags = 6; Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::PlainObject = Eigen::Matrix<double, 6, 3, 0, 6, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:150:30:   required from ‘Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::CoeffBasedProduct(const Lhs&, const Rhs&) [with Lhs = Eigen::CoeffBasedProduct<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> > >, const Eigen::Matrix<double, 3, 3>&, 6>; Rhs = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >; LhsNested = const Eigen::Matrix<double, 6, 3, 0, 6, 3>&; RhsNested = const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >; int NestingFlags = 6]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:593:60:   required from ‘const typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::CoeffBasedProduct<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> > >, const Eigen::Matrix<double, 3, 3>&, 6>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 6>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:63:60:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1521:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 2, 2>, Eigen::Matrix<double, 2, 2> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 2, 2>; Derived = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 2, 2>; Derived = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 2, 2>; OtherDerived = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 2, 2>; Derived = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:220:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = double; int _Rows = 2; int _Cols = 2; int _Options = 0; int _MaxRows = 2; int _MaxCols = 2]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:60:23:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1521:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 6, 2, 0, 6, 2>, Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> > > >, const Eigen::Matrix<double, 2, 2>&, 6> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> > > >, const Eigen::Matrix<double, 2, 2>&, 6>; Derived = Eigen::Matrix<double, 6, 2, 0, 6, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> > > >, const Eigen::Matrix<double, 2, 2>&, 6>; Derived = Eigen::Matrix<double, 6, 2, 0, 6, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:197:7:   required from ‘Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::operator const PlainObject&() const [with LhsNested = const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> > > >; RhsNested = const Eigen::Matrix<double, 2, 2>&; int NestingFlags = 6; Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::PlainObject = Eigen::Matrix<double, 6, 2, 0, 6, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:150:30:   required from ‘Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::CoeffBasedProduct(const Lhs&, const Rhs&) [with Lhs = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> > > >, const Eigen::Matrix<double, 2, 2>&, 6>; Rhs = Eigen::Matrix<double, 2, 1>; LhsNested = const Eigen::Matrix<double, 6, 2, 0, 6, 2>&; RhsNested = const Eigen::Matrix<double, 2, 1>&; int NestingFlags = 6]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:593:60:   required from ‘const typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 2, 1>; Derived = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> > > >, const Eigen::Matrix<double, 2, 2>&, 6>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Matrix<double, 2, 1>&, 6>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:62:61:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1521:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 6, 2, 0, 6, 2>, Eigen::CoeffBasedProduct<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> > >, const Eigen::Matrix<double, 2, 2>&, 6> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> > >, const Eigen::Matrix<double, 2, 2>&, 6>; Derived = Eigen::Matrix<double, 6, 2, 0, 6, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> > >, const Eigen::Matrix<double, 2, 2>&, 6>; Derived = Eigen::Matrix<double, 6, 2, 0, 6, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:197:7:   required from ‘Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::operator const PlainObject&() const [with LhsNested = const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> > >; RhsNested = const Eigen::Matrix<double, 2, 2>&; int NestingFlags = 6; Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::PlainObject = Eigen::Matrix<double, 6, 2, 0, 6, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:150:30:   required from ‘Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>::CoeffBasedProduct(const Lhs&, const Rhs&) [with Lhs = Eigen::CoeffBasedProduct<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> > >, const Eigen::Matrix<double, 2, 2>&, 6>; Rhs = Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >; LhsNested = const Eigen::Matrix<double, 6, 2, 0, 6, 2>&; RhsNested = const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >; int NestingFlags = 6]’
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h:593:60:   required from ‘const typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >; Derived = Eigen::CoeffBasedProduct<const Eigen::Transpose<const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> > >, const Eigen::Matrix<double, 2, 2>&, 6>; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >, 6>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:63:60:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1521:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 3, 3>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 3, 3>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >; Derived = Eigen::Matrix<double, 3, 3>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 3> >; _Scalar = double; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_edge.h:98:25:   required from ‘g2o::BaseEdge<D, E>::InformationType g2o::BaseEdge<D, E>::robustInformation(const Vector3d&) [with int D = 3; E = Eigen::Matrix<double, 3, 1>; g2o::BaseEdge<D, E>::InformationType = Eigen::Matrix<double, 3, 3>; Eigen::Vector3d = Eigen::Matrix<double, 3, 1>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:60:23:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1521:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Matrix<double, 6, 1>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256> >, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256> >’:
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256>; BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = Eigen::Matrix<double, 6, 1>; Rhs = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Matrix<double, 6, 1>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256> >; OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256>; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Matrix<double, 6, 1>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256> >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = Eigen::Matrix<double, 6, 1>; Rhs = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:210:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Matrix<double, 3, 1>&, 256>; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:82:37:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>&) [with Lhs = const Eigen::Matrix<double, 6, 3, 0, 6, 3>&; Rhs = const Eigen::Matrix<double, 3, 1>&; int NestingFlags = 6; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:62:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1521:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 1, Eigen::Stride<0, 0> >, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 256> >, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 256> >’:
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 256>; BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Map<Eigen::Matrix<double, 6, 6>, 1, Eigen::Stride<0, 0> >; Rhs = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 256>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 1, Eigen::Stride<0, 0> >, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 256> >; OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 256>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 256>; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 1, Eigen::Stride<0, 0> >, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 256> >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Map<Eigen::Matrix<double, 6, 6>, 1, Eigen::Stride<0, 0> >; Rhs = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 256>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 3, 0, 6, 3>&, const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >, 256>; Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 1, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:78:37:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>&) [with Lhs = const Eigen::Matrix<double, 6, 3, 0, 6, 3>&; Rhs = const Eigen::Map<Eigen::Matrix<double, 3, 6, 0, 3, 6>, 1, Eigen::Stride<0, 0> >; int NestingFlags = 6; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 1, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:63:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 3; E = Eigen::Matrix<double, 3, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1521:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 2, 2>, Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 2, 2> > >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 2, 2> >; Derived = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 2, 2> >; Derived = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 2, 2>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 2, 2> >]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 2, 2> >; Derived = Eigen::Matrix<double, 2, 2>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 2, 2> >; _Scalar = double; int _Rows = 2; int _Cols = 2; int _Options = 0; int _MaxRows = 2; int _MaxCols = 2]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_edge.h:98:25:   required from ‘g2o::BaseEdge<D, E>::InformationType g2o::BaseEdge<D, E>::robustInformation(const Vector3d&) [with int D = 2; E = Eigen::Matrix<double, 2, 1>; g2o::BaseEdge<D, E>::InformationType = Eigen::Matrix<double, 2, 2>; Eigen::Vector3d = Eigen::Matrix<double, 3, 1>]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:60:23:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1521:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Matrix<double, 6, 1>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Matrix<double, 2, 1>&, 256> >, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Matrix<double, 2, 1>&, 256> >’:
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Matrix<double, 2, 1>&, 256>; BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = Eigen::Matrix<double, 6, 1>; Rhs = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Matrix<double, 2, 1>&, 256>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Matrix<double, 6, 1>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Matrix<double, 2, 1>&, 256> >; OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Matrix<double, 2, 1>&, 256>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Matrix<double, 2, 1>&, 256>; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_difference_op<double>, Eigen::Matrix<double, 6, 1>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Matrix<double, 2, 1>&, 256> >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_difference_op<double>; Lhs = Eigen::Matrix<double, 6, 1>; Rhs = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Matrix<double, 2, 1>&, 256>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:210:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Matrix<double, 2, 1>&, 256>; Derived = Eigen::Matrix<double, 6, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:82:37:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator-=(const Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>&) [with Lhs = const Eigen::Matrix<double, 6, 2, 0, 6, 2>&; Rhs = const Eigen::Matrix<double, 2, 1>&; int NestingFlags = 6; ExpressionType = Eigen::Matrix<double, 6, 1>; StorageBase = Eigen::MatrixBase]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:62:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1521:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 1, Eigen::Stride<0, 0> >, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >, 256> >, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >, 256> >’:
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:137:64:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with RhsDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >, 256>; BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Map<Eigen::Matrix<double, 6, 6>, 1, Eigen::Stride<0, 0> >; Rhs = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >, 256>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 1, Eigen::Stride<0, 0> >, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >, 256> >; OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >, 256>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >, 256>; Derived = Eigen::SelfCwiseBinaryOp<Eigen::internal::scalar_sum_op<double>, Eigen::Map<Eigen::Matrix<double, 6, 6>, 1, Eigen::Stride<0, 0> >, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >, 256> >]’
/usr/local/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:150:29:   required from ‘Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>& Eigen::SelfCwiseBinaryOp<BinOp, Lhs, Rhs>::operator=(const Rhs&) [with BinaryOp = Eigen::internal::scalar_sum_op<double>; Lhs = Eigen::Map<Eigen::Matrix<double, 6, 6>, 1, Eigen::Stride<0, 0> >; Rhs = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >, 256>]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:224:7:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 6, 2, 0, 6, 2>&, const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >, 256>; Derived = Eigen::Map<Eigen::Matrix<double, 6, 6>, 1, Eigen::Stride<0, 0> >]’
/usr/local/include/eigen3/Eigen/src/Core/NoAlias.h:78:37:   required from ‘ExpressionType& Eigen::NoAlias<ExpressionType, StorageBase>::operator+=(const Eigen::CoeffBasedProduct<Lhs, Rhs, NestingFlags>&) [with Lhs = const Eigen::Matrix<double, 6, 2, 0, 6, 2>&; Rhs = const Eigen::Map<Eigen::Matrix<double, 2, 6, 0, 2, 6>, 1, Eigen::Stride<0, 0> >; int NestingFlags = 6; ExpressionType = Eigen::Map<Eigen::Matrix<double, 6, 6>, 1, Eigen::Stride<0, 0> >; StorageBase = Eigen::MatrixBase]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_unary_edge.hpp:63:27:   required from ‘void g2o::BaseUnaryEdge<D, E, VertexXi>::constructQuadraticForm() [with int D = 2; E = Eigen::Matrix<double, 2, 1>; VertexXi = g2o::VertexSE3Expmap]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1521:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of ‘struct Eigen::internal::assign_traits<Eigen::Matrix<double, 2, 1>, Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 2, 2>&, const Eigen::Matrix<double, 2, 1>&, 6> >’:
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:506:64:   required from ‘Derived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 2, 2>&, const Eigen::Matrix<double, 2, 1>&, 6>; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 2, 2>&, const Eigen::Matrix<double, 2, 1>&, 6>; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:   required from ‘static Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 2, 1>; OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 2, 2>&, const Eigen::Matrix<double, 2, 1>&, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 2, 2>&, const Eigen::Matrix<double, 2, 1>&, 6>; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:296:25:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 2, 2>&, const Eigen::Matrix<double, 2, 1>&, 6>; _Scalar = double; int _Rows = 2; int _Cols = 1; int _Options = 0; int _MaxRows = 2; int _MaxCols = 1]’
/usr/local/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:127:49:   required from ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_conj_product_op<double, double>; Lhs = const Eigen::Matrix<double, 2, 1>; Rhs = const Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 2, 2>&, const Eigen::Matrix<double, 2, 1>&, 6>]’
/usr/local/include/eigen3/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:44:10:   required from ‘const Eigen::CwiseBinaryOp<CustomBinaryOp, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::binaryExpr(const Eigen::MatrixBase<OtherDerived>&, const CustomBinaryOp&) const [with CustomBinaryOp = Eigen::internal::scalar_conj_product_op<double, double>; OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 2, 2>&, const Eigen::Matrix<double, 2, 1>&, 6>; Derived = Eigen::Matrix<double, 2, 1>]’
/usr/local/include/eigen3/Eigen/src/Core/Dot.h:34:117:   required from ‘static Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Matrix<double, 2, 1>; U = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 2, 2>&, const Eigen::Matrix<double, 2, 1>&, 6>; bool NeedToTranspose = false; Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar = double]’
/usr/local/include/eigen3/Eigen/src/Core/Dot.h:73:58:   required from ‘typename Eigen::internal::scalar_product_traits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::Matrix<double, 2, 2>&, const Eigen::Matrix<double, 2, 1>&, 6>; Derived = Eigen::Matrix<double, 2, 1>; typename Eigen::internal::scalar_product_traits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = double]’
/home/kanishk/ros_ws/ORB_SLAM3/Thirdparty/g2o/g2o/types/../core/base_edge.h:60:47:   required from ‘double g2o::BaseEdge<D, E>::chi2() const [with int D = 2; E = Eigen::Matrix<double, 2, 1>]’
/home/kanishk/ros_ws/ORB_SLAM3/src/LocalMapping.cc:1521:1:   required from here
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:53:57: warning: enum constant in boolean context [-Wint-in-bool-context]
     MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:54:41: warning: enum constant in boolean context [-Wint-in-bool-context]
                        && (DstIsAligned || MaxSizeAtCompileTime == Dynamic),
                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:57:41: warning: enum constant in boolean context [-Wint-in-bool-context]
     MaySliceVectorize  = MightVectorize && DstHasDirectAccess
                          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/include/eigen3/Eigen/src/Core/Assign.h:96:50: warning: enum constant in boolean context [-Wint-in-bool-context]
                 ? ( bool(MayUnrollCompletely) && bool(DstIsAligned) ? int(CompleteUnrolling) : int(NoUnrolling) )
                                                  ^~~~~~~~~~~~~~~~~~
CMakeFiles/ORB_SLAM3.dir/build.make:110: recipe for target 'CMakeFiles/ORB_SLAM3.dir/src/LocalMapping.cc.o' failed
make[2]: *** [CMakeFiles/ORB_SLAM3.dir/src/LocalMapping.cc.o] Error 1
CMakeFiles/Makefile2:289: recipe for target 'CMakeFiles/ORB_SLAM3.dir/all' failed
make[1]: *** [CMakeFiles/ORB_SLAM3.dir/all] Error 2
Makefile:83: recipe for target 'all' failed
make: *** [all] Error 2
